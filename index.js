const TelegramBot = require('node-telegram-bot-api');
const token = 'your_token';

const bot = new TelegramBot(token, { polling: true });

const commands = [
    {
        command: 'start',
        description: 'Запус бота'
    },
    {
        command: 'help',
        description: 'Раздел помощи'
    },
    {
        command: 'menu',
        description: 'Meню (хз зачем оно, пускай будет)'
    }
]

bot.setMyCommands(commands);

bot.on('text', async msg => {
    console.log(msg);
    if (msg.text === '/help') {
        await bot.sendMessage(msg.chat.id, 'Этот бот имитирует алгоритм сценария "Перевод на конкретного сотрудника"');
    } else if (msg.text === '/start') {
        await bot.sendMessage(msg.chat.id, 'Клиент не согласен с полученным официальным письмом, либо вопрос по обращению с типом \n"Инцидент" \n"Удержание" \n"Претензия"?', {
            reply_markup: {
                keyboard: [
                    ['Да, связан с инцом', 'Нет, не связан'],
                    ['В начало']
                ], resize_keyboard: true
            }
        })
    } else if (msg.text === 'Да, связан с инцом') {
        await bot.sendMessage(msg.chat.id, 'Ищи сценарий')
    } else if (msg.text === 'Нет, не связан') {
        bot.sendMessage(msg.chat.id, 'Вопрос в твоей компетенции, и клиент не настаивает на переводе на конкретного сотрдуника?', {
            reply_markup: {
                keyboard: [
                    ['Да, в моей компетенции', 'Нет, не в моей'],
                    ['В начало']
                ], resize_keyboard: true
            }
        })
    } else if (msg.text === 'Да, в моей компетенции') {
        await bot.sendMessage(msg.chat.id, 'Предложи свою помощь и действуй со стандартными правилами регистрации обращения')
    } else if (msg.text === 'Нет, не в моей') {
        await bot.sendMessage(msg.chat.id, 'Клиент настаивает на соединении с руководителем управления, департамента или с сотрудником, который находится в разделе "Руководство?"', {
            reply_markup: {
                keyboard: [
                    ['Да, настаивает на переводе', 'Нет, не с руководителем'],
                    ['В начало']
                ], resize_keyboard: true
            }
        })
    } else if (msg.text === 'Да, настаивает на переводе') {
        await bot.sendMessage(msg.chat.id, 'Обращение поступило в рабочее время?', {
            reply_markup: {
                keyboard: [
                    ['Да, в рабочее', 'Нет, в нерабочее'],
                    ['В начало']
                ], resize_keyboard: true
            }
        })
    } else if (msg.text === 'Да, в рабочее') {
        await bot.sendMessage(msg.chat.id, 'Переведи вызов в секритариат, доб. 665')
    } else if (msg.text === 'Нет, в нерабочее') {
        await bot.sendMessage(msg.chat.id, 'Запросить у клиента: ИНН, Название организации, причину обращения и отправить письмо taxcom@taxcom.ru')
    } else if (msg.text === 'Нет, не с руководителем') {
        await bot.sendMessage(msg.chat.id, 'Уточнить добавочный номер сотрудника и попытаться с ним связаться. \n Удалось дозвониться?', {
            reply_markup: {
                keyboard: [
                    ['Да, удалось', 'Нет, не удалось'],
                    ['В начало']
                ], resize_keyboard: true
            }
        })
    } else if (msg.text === 'Да, удалось') {
        await bot.sendMessage(msg.chat.id, 'Перевести вызов. \n Зарегистрировать сценарий "Перевод вызова по просьбе клиента" и не забудь проставить перевод.')
    } else if (msg.text === 'Нет, не удалось') {
        await bot.sendMessage(msg.chat.id, 'Проверить в ст. БЗ "Телефоны отделов" есть ли добавочный номер отдела или ФГ, которой принадлежит сотрудник?', {
            reply_markup: {
                keyboard: [
                    ['Да, есть общий номер', 'Нет, номер отсутствует'],
                    ['В начало']
                ], resize_keyboard: true
            }
        })
    } else if (msg.text === 'Да, есть общий номер') {
        await bot.sendMessage(msg.chat.id, 'Предложить перевести вызов на общую линию с формулировкой: \n"К сожалению, сотрудник сейчас занят и не может вам ответить, я соединяю вас с общей линией отдела, Вам поможет любой другой специалист". Клиент согласен?', {
            reply_markup: {
                keyboard: [
                    ['Да, согласен', 'Нет, не согласен'],
                    ['В начало']
                ], resize_keyboard: true
            }
        })
    } else if (msg.text === 'Да, согласен') {
        await bot.sendMessage(msg.chat.id, 'Перевести вызов. \nЗарегистрировать на сценарий "Перевод по просьбе клиента."')
    } else if (msg.text === 'Нет, не согласен') {
        await bot.sendMessage(msg.chat.id, 'Клиент настаивает на соединении со специалистом Контакт-Центра?', {
            reply_markup: {
                keyboard: [
                    ['Да, настаивает на переводе со специалистом КЦ', 'Нет, не настаивает на переводе со специалистом'],
                    ['В начало']
                ], resize_keyboard: true
            }
        })
    } else if (msg.text === 'Да, настаивает на переводе со специалистом КЦ') {
        await bot.sendMessage(msg,chat.id, 'Объяснить, что сейчас перевести вызов можно только на общу линию ФГ этого сотрудника.')
    } else if (msg.text === 'Нет, не настаивает на переводе со специалистом') {
        await bot.sendMessage(msg.chat.id, 'Сообщить, что отправишь этому сотруднику письмо. \nЗапросить у клиента ИНН, контакты и причину обращения. Отправить письмо на e-mail сотрудника, а также поставить в копию его руководителя. \nЗарегистрировать обращение на сценарий "Клиент просил о переводе, но перевод не состоялся и консультация не потребовалась."')
    } else if (msg.text === 'Нет, номер отсутствует') {
        await bot.sendMessage(msg.chat.id, 'Предложить Клиенту отправить этому сотруднику письмо. Клиент согласен?', {
            reply_markup: {
                keyboard: [
                    ['Да, согласен на письмо', 'Нет, не согласен на отправку письма'],
                    ['В начало']
                ], resize_keyboard: true
            }
        })
    } else if (msg.text === 'Да, согласен на письмо') {
        await bot.sendMessage(msg.chat.id, 'Запросить у клиента ИНН, контакты и причину обращения. Отправить письмо на e-mail сотрудника, а также поставить в копию его руководителя. \nЗарегистрировать обращение на сценарий "Клиент просил о переводе, но перевод не состоялся и консультация не потребовалась."')
    } else if (msg.text === 'Нет, не согласен на отправку письма') {
        await bot.sendMessage(msg.chat.id, 'Сообщить, что в данный момент сотрудник не может принять вызов. Предложить перезвонить позднее в рабочее время. \nЗарегистрировать на сценарий "Клиент просил о переводе, но перевод не состоялся и консультация не потребовалась."')
    } else if (msg.text === 'В начало') {
        await bot.sendMessage(msg.chat.id, 'Клиент не согласен с полученным официальным письмом, либо вопрос по обращению с типом \n"Инцидент" \n"Удержание" \n"Претензия"?', {
            reply_markup: {
                keyboard: [
                    ['Да, связан с инцом', 'Нет, не связан'],
                    ['В начало']
                ], resize_keyboard: true
            }
        })
    } else {
        bot.sendMessage(msg.chat.id, 'Нажимай, пожалуйста на кнопки.')
    }
})
